<?xml version="1.0"?>
<ruleset name="coding">
    <description>The coding standard.</description>

    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2"/>

    <file>/scripts/src</file>
    <file>/scripts/features</file>
    <file>/scripts/tests</file>

    <!-- forced warning -->
    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <type>warning</type>
    </rule>

    <!-- phpspec -->
    <rule ref="PSR1.Methods.CamelCapsMethodName"/>

    <!-- class properties -->
    <rule ref="Squiz.Commenting.VariableComment.Missing">
        <exclude-pattern>/src/Migrations/*</exclude-pattern>
        <type>warning</type>
    </rule>

    <rule ref="Generic.Files.LineLength.TooLong">
        <exclude-pattern>/src/Migrations/*</exclude-pattern>
    </rule>

    <!-- array -->
    <rule ref="Squiz.Arrays.ArrayDeclaration.CommaAfterLast"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- more -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/TypeHintDeclarationSniff.php">
        <type>warning</type>
        <exclude-pattern>/src/Migrations/*</exclude-pattern>
        <exclude-pattern>/tests/*</exclude-pattern>
        <properties>
            <property name="allAnnotationsAreUseful" type="boolean" value="true" />
            <property name="enableEachParameterAndReturnInspection" type="boolean" value="true" />
            <property name="traversableTypeHints" type="array" value="
                \Traversable,
                \Doctrine\Common\Collections\Collection
            "/>
        </properties>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/DeclareStrictTypesSniff.php">
        <type>warning</type>
        <exclude-pattern>/tests/*</exclude-pattern>
        <properties>
            <property name="spacesCountAroundEqualsSign" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.Scope.MethodScope">
        <exclude-pattern>/spec/*</exclude-pattern>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/UselessConstantTypeHintSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/LongTypeHintsSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ReturnTypeHintSpacingSniff.php">
        <exclude-pattern>/src/Migrations/*</exclude-pattern>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/NullableTypeForNullDefaultValueSniff.php">
        <type>warning</type>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ParameterTypeHintSpacingSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Exceptions/ReferenceThrowableOnlySniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Exceptions/DeadCatchSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/NewWithParenthesesSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/DisallowEqualOperatorsSniff.php">
        <type>warning</type>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/RequireNullCoalesceOperatorSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/DisallowYodaComparisonSniff.php">
        <type>warning</type>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/LanguageConstructWithParenthesesSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Functions/StaticClosureSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Functions/UnusedInheritedVariablePassedToClosureSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Variables/UnusedVariableSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Variables/UselessVariableSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/ModernClassNameReferenceSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/UnusedPrivateElementsSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/SuperfluousAbstractClassNamingSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/SuperfluousInterfaceNamingSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/SuperfluousExceptionNamingSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/ClassConstantVisibilitySniff.php">
        <type>warning</type>
    </rule>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/UselessAliasSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/UnusedUsesSniff.php">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/UseFromSameNamespaceSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/PHP/TypeCastSniff.php"/>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Commenting/UselessInheritDocCommentSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Commenting/ForbiddenAnnotationsSniff.php">
        <properties>
            <property name="forbiddenAnnotations" type="array" value="
                @author,
                @created,
                @copyright,
                @license,
                @package,
                @version
            " />
        </properties>
    </rule>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Commenting/EmptyCommentSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Commenting/InlineDocCommentDeclarationSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Commenting/RequireOneLinePropertyDocCommentSniff.php">
        <exclude-pattern>/src/Entity/*</exclude-pattern>
    </rule>

    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/PHP/UselessSemicolonSniff.php"/>
    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/PHP/UselessParenthesesSniff.php"/>
</ruleset>
